@model PortalPsicologia.Models.ViewModels.PreguntaViewModel

@{
    ViewData["Title"] = "Examen Psicométrico";
}

<style>
    body {
        background-image: url('/img/fondoUn1.png');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', sans-serif;
    }

    .titulo-principal {
        text-align: center;
        padding: 40px 20px 20px;
        background: rgba(240, 43, 43, 0.527);
        color: white;
        font-size: 2.8rem;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 2px;
        border-bottom: 4px solid #930000;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        opacity: 0;
        transform: translateY(-50px);
        transition: opacity 0.8s ease, transform 0.8s ease;
    }

    .titulo-principal.visible {
        opacity: 1;
        transform: translateY(0);
    }

    /* Clase sin animación (para las siguientes preguntas) */
    .titulo-principal.no-animacion {
        opacity: 1 !important;
        transform: translateY(0) !important;
        transition: none !important;
    }

    .examen-container {
        max-width: 650px;
        margin: 40px auto;
        background-color: rgba(255, 255, 255, 0.95);
        border: 2px solid #b80000;
        border-radius: 12px;
        padding: 40px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    .examen-header {
        margin-bottom: 30px;
        text-align: center;
    }

    .examen-header h2 {
        font-size: 1.8rem;
        color: #b80000;
        font-weight: bold;
    }

    .pregunta-texto {
        word-wrap: break-word;
        white-space: normal;
        font-size: 1.4rem;
        text-align: center;
        margin-bottom: 25px;
        color: #333;
    }

    .form-check {
        margin-bottom: 15px;
        font-size: 1.1rem;
    }

    .form-check-input {
        margin-right: 10px;
    }

    .btn-siguiente {
        background-color: #b80000;
        color: white;
        padding: 12px 30px;
        font-size: 1.1rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .btn-siguiente:hover {
        background-color: #930000;
    }

    .tiempo-restante {
        margin-top: 25px;
        text-align: center;
        font-size: 1rem;
        color: red;
    }
</style>


<!-- Título principal -->
<div class="titulo-principal" id="tituloPrincipal">
    Examen Psicométrico
</div>

<!-- Contenedor del examen -->
<div class="examen-container">
    <div class="examen-header">
        <h2>Pregunta @(Model.Indice + 1) de @Model.TotalPreguntas</h2>
    </div>

    <form asp-action="ExamenPsico" method="post" id="formPregunta">
        <input type="hidden" asp-for="Indice" />

        <div class="pregunta-texto">
            <p>@Model.PreguntaActual.Texto</p>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="RespuestaSeleccionada" value="0" id="opcion0" />
            <label class="form-check-label" for="opcion0">En absoluto</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="RespuestaSeleccionada" value="1" id="opcion1" />
            <label class="form-check-label" for="opcion1">Levemente</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="RespuestaSeleccionada" value="2" id="opcion2" />
            <label class="form-check-label" for="opcion2">Moderadamente</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" asp-for="RespuestaSeleccionada" value="3" id="opcion3" />
            <label class="form-check-label" for="opcion3">Severamente</label>
        </div>

        <div class="text-center">
            <button type="submit" class="btn-siguiente">Siguiente</button>
        </div>
    </form>

    <div class="tiempo-restante">
        Tiempo restante: <span id="contador"></span>
    </div>
</div>

@section Scripts {
    <script>
        // Mostrar animación del título solo la primera vez
        window.addEventListener("load", function () {
            const titulo = document.getElementById("tituloPrincipal");

            if (!sessionStorage.getItem("examenAnimado")) {
                // Primera vez: animar
                titulo.classList.add("visible");
                sessionStorage.setItem("examenAnimado", "true");
            } else {
                // Siguientes veces: sin animación
                titulo.classList.add("no-animacion");
            }
        });

        // Lógica del contador
        let tiempo = @Model.TiempoRestante;
        const contadorElemento = document.getElementById('contador');

        function formatTime(seconds) {
            const minutos = Math.floor(seconds / 60);
            const segundos = seconds % 60;
            return `${minutos}:${segundos < 10 ? '0' : ''}${segundos}`;
        }

        contadorElemento.textContent = formatTime(tiempo);

        const interval = setInterval(() => {
            tiempo--;
            contadorElemento.textContent = formatTime(tiempo);

            if (tiempo <= 0) {
                clearInterval(interval);
                window.location.href = '@Url.Action("ExamenExpirado", "ExamenPsico")';
            }
        }, 1000);
    </script>
}

