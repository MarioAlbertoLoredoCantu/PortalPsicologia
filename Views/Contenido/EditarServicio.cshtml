@model PortalPsicologia.Models.ContenidoEditable

@{
    ViewData["Title"] = "Editar Atención a Alumnos";
    Layout = "_Layout";
}

@section Styles {
    <style>
        body {
            background-color: #f8f9fa;
        }

        h2 {
            text-align: center;
            font-weight: bold;
            margin-bottom: 20px;
            color: #343a40;
        }

        .editor-container {
            max-width: 900px;
            margin: 30px auto;
            background: #ffffff;
            padding: 25px 30px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        label {
            font-weight: bold;
            margin-bottom: 10px;
            display: block;
            font-size: 1.1rem;
        }

        textarea {
            border-radius: 6px;
            min-height: 250px;
        }

        .btn {
            min-width: 120px;
            padding: 10px;
            font-size: 1rem;
            font-weight: bold;
            border-radius: 6px;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }

        .btn-group-custom {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .char-counter {
            text-align: right;
            font-size: 0.9rem;
            color: #6c757d;
            margin-top: 5px;
        }
    </style>
}

<div class="editor-container">
    <h2>Editar Atención a Alumnos</h2>

    <form asp-action="EditarServicio" method="post">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Clave" />

        <div class="form-group">
            <label>Contenido</label>
            <textarea id="editor" asp-for="Texto" class="form-control"></textarea>
            <div class="char-counter" id="charCounter"></div>
        </div>

        <div class="btn-group-custom">
            <button type="submit" class="btn btn-primary">Guardar</button>
            @{
                var accionCancelar = Model.Clave switch {
                    "servicio-alumnos" => "Alumnos",
                    "servicio-docentes" => "Docentes",
                    "servicio-estudiantes" => "Estudiantes",
                    "servicio-administrativos" => "Administrativos",
                    _ => "Index"
                };
            }
            <a asp-controller="Servicios" asp-action="@accionCancelar" class="btn btn-secondary">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.tiny.cloud/1/caddokn82nsyzvdaawu5mwjd9b5t28kz1tn11h6x95xuopnb/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        const maxCharacters = 1000; // Límite de caracteres

        tinymce.init({
            selector: '#editor',
            menubar: false,
            plugins: 'lists link advlist textcolor',
            toolbar: 'undo redo | bold italic underline | forecolor backcolor | alignleft aligncenter alignright alignjustify | fontselect fontsizeselect | bullist numlist | link',
            fontsize_formats: '8pt 10pt 12pt 14pt 18pt 24pt 36pt 48pt',
            branding: false,
            height: 300,
    
            setup: function (editor) {
                // Mostrar caracteres restantes
                editor.on('input', function () {
                    const content = editor.getContent({ format: 'text' });
                    const remaining = maxCharacters - content.length;
                    document.getElementById('charCount').textContent = 
                        (remaining >= 0 ? remaining : 0) + ' caracteres restantes';

                    // Bloquear más texto al exceder
                    if (content.length > maxCharacters) {
                        editor.undoManager.undo(); // Revertir el último cambio
                    }
                });

                // Prevenir texto pegado más largo
                editor.on('paste', function (e) {
                    const content = editor.getContent({ format: 'text' });
                    const pastedText = (e.clipboardData || window.clipboardData).getData('text');

                    if (content.length + pastedText.length > maxCharacters) {
                        e.preventDefault();
                        const allowedText = pastedText.substring(0, maxCharacters - content.length);
                        editor.insertContent(allowedText);
                    }
                });
                
            }
        });
    </script>
}

}


