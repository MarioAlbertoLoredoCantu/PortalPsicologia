@model PortalPsicologia.Models.ViewModels.PreguntaViewModel

@{
    ViewData["Title"] = "Gestión de Preguntas";
}

<style>
    body {
        background-image: url('/img/fondoUn1.png');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
    }

    .contenedor-preguntas {
        max-width: 1000px;
        margin: 30px auto;
        background: rgba(255, 255, 255, 0.95);
        border: 2px solid #b80000;
        border-radius: 12px;
        padding: 30px;
    }

    .contenedor-preguntas h2 {
        color: #b80000;
        font-weight: bold;
        text-align: center;
        margin-bottom: 30px;
    }

    .form-group label {
        font-weight: 600;
    }

    .form-control {
        border-radius: 8px;
        padding: 10px;
        font-size: 1rem;
    }

    .btn-success {
        background-color: #28a745;
        border-radius: 8px;
        padding: 8px 16px;
    }

    .tabla-preguntas {
        margin-top: 30px;
        border-radius: 12px;
        overflow: hidden;
    }

    .tabla-preguntas th {
        background-color: #b80000;
        color: white;
        text-align: center;
    }

    .tabla-preguntas td {
        vertical-align: middle;
        text-align: center;
    }

    .tabla-preguntas td:nth-child(2) {
        text-align: left;
    }

    .btn-sm {
        border-radius: 6px;
        margin-right: 5px;
    }

    .estado-activa {
        color: green;
        font-weight: bold;
    }

    .estado-inactiva {
        color: gray;
        font-style: italic;
    }

    tr.dragging {
        opacity: 0.5;
        background-color: #e0e0e0 !important;
    }
</style>

<div class="contenedor-preguntas">
    <h2>Gestión de Preguntas</h2>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-success text-center">@TempData["Mensaje"]</div>
    }

    <!-- Formulario -->
    <form asp-action="GuardarPregunta" asp-controller="Pregunta" method="post">
        <input type="hidden" asp-for="Pregunta.PreguntaId" />
        <div class="form-group">
            <label asp-for="Pregunta.Texto">Texto de la Pregunta</label>
            <input asp-for="Pregunta.Texto" class="form-control" maxlength="400" />
            <span asp-validation-for="Pregunta.Texto" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-success mt-3">
            @(Model.Pregunta.PreguntaId == 0 ? "Agregar Pregunta" : "Actualizar Pregunta")
        </button>
    </form>

    <!-- Tabla -->
    <table class="table table-bordered table-striped tabla-preguntas" id="tabla-preguntas">
        <thead>
            <tr>
                <th style="width: 60px;">#</th>
                <th>Texto</th>
                <th style="width: 100px;">Estado</th>
                <th style="width: 240px;">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.ListaPreguntas)
            {
                <tr data-id="@p.PreguntaId" class="@(p.Activa ? "pregunta-activa" : "")">
                    <td>@(p.Activa ? p.Orden.ToString() : "-")</td>
                    <td style="white-space: normal; word-break: break-word; max-width: 400px;">@p.Texto</td>
                    <td>
                        @if (p.Activa)
                        {
                            <span class="estado-activa">Activa</span>
                        }
                        else
                        {
                            <span class="estado-inactiva">Inactiva</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-id="@p.PreguntaId" class="btn btn-primary btn-sm">Editar</a>

                        @if (p.Activa)
                        {
                            <a asp-action="Desactivar" asp-route-id="@p.PreguntaId" class="btn btn-warning btn-sm">Desactivar</a>
                        }
                        else
                        {
                            <a asp-action="Activar" asp-route-id="@p.PreguntaId" class="btn btn-success btn-sm">Activar</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let draggedRow = null;

        document.querySelectorAll('.pregunta-activa').forEach(row => {
            row.draggable = true;

            row.addEventListener('dragstart', e => {
                draggedRow = row;
                row.classList.add('dragging');
            });

            row.addEventListener('dragend', e => {
                row.classList.remove('dragging');
                actualizarOrdenEnServidor();
            });

            row.addEventListener('dragover', e => {
                e.preventDefault();
                const afterElement = getDragAfterElement(row.parentElement, e.clientY);
                const tableBody = row.parentElement;
                if (afterElement == null) {
                    tableBody.appendChild(draggedRow);
                } else {
                    tableBody.insertBefore(draggedRow, afterElement);
                }
            });
        });

        function getDragAfterElement(container, y) {
            const draggableElements = [...container.querySelectorAll('.pregunta-activa:not(.dragging)')];

            return draggableElements.reduce((closest, child) => {
                const box = child.getBoundingClientRect();
                const offset = y - box.top - box.height / 2;
                if (offset < 0 && offset > closest.offset) {
                    return { offset: offset, element: child };
                } else {
                    return closest;
                }
            }, { offset: Number.NEGATIVE_INFINITY }).element;
        }

       function actualizarOrdenEnServidor() {
    const ids = Array.from(document.querySelectorAll('.pregunta-activa')).map(row => parseInt(row.dataset.id));

    fetch('/Pregunta/Reordenar', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
        },
        body: JSON.stringify(ids)
    })    .then(response => {
        if (!response.ok) {
            return response.json().then(err => { throw new Error(err.error); });
        }
        return response.json();
    })
    .then(data => {
        console.log(data.mensaje);
        location.reload(); // ✅ Esto actualiza la vista para mostrar el nuevo orden
    })
    .catch(error => {
        console.error("Error al reordenar:", error.message);
    });


}

    </script>
}
